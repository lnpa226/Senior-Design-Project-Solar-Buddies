#include<Wire.h>
#include "RTClib.h"

//Stuff for Angle sensors
const int MPU_addr=0x69; int16_t AcX,AcY,AcZ,Tmp,GyX,GyY,GyZ;
int minVal=265; int maxVal=402;
double x; double y;

//Stuff for RTC
RTC_DS3231 rtc;

const int relayNorth=8;
const int relaySouth=9;
const int relayEast=10;
const int relayWest=11;
const int relayLight=12;
const int Error=3; //3 degree angle of error allowed
const int azimuthArray[13]={143,143,143,150,160,170,180,190,200,210,217,217,217};
const int horizontalArray[13]={234,234,234,210,202,194,202,210,234,234,234,234,234};
//const int horizontalArray[13]={53,53,53,60,68,76,68,60,53,53,53,53};
//const int horizontalArray[13]={36,44,52,60,68,76,68,60,52,44,36,28};

int goalAngleNS=0;
int currentAngleNS=0;
int angleSensorNS=0;
int goalAngleWE=0;
int currentAngleWE=0;
int angleSensorWE=0;

void setup() {
  // put your setup code here, to run once:
  Serial.begin(9600);
  delay(10000);

    //rtc.adjust(DateTime(2017, 1, 27, 12, 56, 0));

    if (! rtc.begin()) {
    Serial.println("Couldn't find RTC");
    while (1);
  }

  if (rtc.lostPower()) {
    Serial.print("RTC lost power, lets set the time!");
  }

  rtc.adjust(DateTime(F(__DATE__), F(__TIME__)));
  rtc.adjust(DateTime(2017, 1, 27, 12, 56, 0));
  pinMode(relayNorth, OUTPUT); // Configure pin 8 as an Output
  pinMode(relaySouth, OUTPUT); // Configure pin 9 as an Output
  pinMode(relayWest, OUTPUT); // Configure pin 11 as an Output
  pinMode(relayEast, OUTPUT); // Configure pin 10 as an Output
  pinMode(relayLight,OUTPUT); // Configure pin 12 as an output

  pinMode(relayNorth, HIGH); // Set relay as low
  pinMode(relaySouth, HIGH); // Set Relay as low
  pinMode(relayWest, HIGH); // Set relay as low
  pinMode(relayEast, HIGH); // Set Relay as low
  pinMode(relayLight,HIGH); //Set Relay as low
} 

void loop() {
  // put your main code here, to run repeatedly:
    DateTime now = rtc.now();
    currentAngleNS=getCurrentX();
    currentAngleWE=getCurrentY();
    goalAngleNS=horizontalArray[(now.month()-1)];
    goalAngleWE=azimuthArray[now.hour()-6];
    Serial.print(goalAngleNS);
    Serial.print('\n');
    Serial.print(currentAngleNS);
    Serial.print('\n');
    Serial.print(goalAngleWE);
    Serial.print('\n');
    Serial.print(currentAngleWE);
    
    //Serial.print(goalAngleWE);
    Serial.print('\n');
    
    while ((currentAngleNS + Error) < goalAngleNS){
      digitalWrite(relaySouth,LOW);
      delay(100);//Wait one Second
      currentAngleNS=getCurrentX();//Read new angle to compare to goal angle
    }
    digitalWrite(relayNorth,HIGH);
    digitalWrite(relaySouth,HIGH);//Shut relays off once the angle is correct
    
    while((currentAngleNS - Error) > goalAngleNS){
      digitalWrite(relayNorth,LOW);
      delay(100);//Wait one Second
      currentAngleNS=getCurrentX();//Read new angle to compare to goal angle
    }
    digitalWrite(relayNorth,HIGH);
    digitalWrite(relaySouth,HIGH);//Shut relays off once the angle is correct

    while ((currentAngleWE + Error) < goalAngleWE){
      digitalWrite(relayWest,LOW);
      delay(100);//Wait one Second
      currentAngleWE=getCurrentY();//Read new angle to compare to goal angle
    }
    digitalWrite(relayWest,HIGH);
    digitalWrite(relayEast,HIGH);//Shut relays off once the angle is correct
    
    while((currentAngleWE - Error) > goalAngleWE){
      digitalWrite(relayEast,LOW);
      delay(100);//Wait one Second
      currentAngleWE=getCurrentY();//Read new angle to compare to goal angle
    }
    digitalWrite(relayWest,HIGH);
    digitalWrite(relayEast,HIGH);//Shut relays off once the angle is correct

    if((now.hour(),DEC)>=18||(now.hour(),DEC)<=6){
      digitalWrite(relayLight,LOW);
    }
    else{
      digitalWrite(relayLight,HIGH);
    }
    delay(1000);
    
}

int getCurrentX(){
  Wire.beginTransmission(MPU_addr); 
  Wire.write(0x3B); 
  Wire.endTransmission(false); 
  Wire.requestFrom(MPU_addr,14,true); 
  AcX=Wire.read()<<8|Wire.read(); 
  AcY=Wire.read()<<8|Wire.read(); 
  AcZ=Wire.read()<<8|Wire.read(); 
  int xAng = map(AcX,minVal,maxVal,-90,90); 
  int yAng = map(AcY,minVal,maxVal,-90,90); 
  int zAng = map(AcZ,minVal,maxVal,-90,90);

x= RAD_TO_DEG*(atan2(-yAng, -zAng)+PI); y= RAD_TO_DEG * (atan2(-xAng, -zAng)+PI);
return x;
}

int getCurrentY(){
  Wire.beginTransmission(MPU_addr); 
  Wire.write(0x3B); 
  Wire.endTransmission(false); 
  Wire.requestFrom(MPU_addr,14,true); 
  AcX=Wire.read()<<8|Wire.read(); 
  AcY=Wire.read()<<8|Wire.read(); 
  AcZ=Wire.read()<<8|Wire.read(); 
  int xAng = map(AcX,minVal,maxVal,-90,90); 
  int yAng = map(AcY,minVal,maxVal,-90,90); 
  int zAng = map(AcZ,minVal,maxVal,-90,90);

x= RAD_TO_DEG*(atan2(-yAng, -zAng)+PI); y= RAD_TO_DEG * (atan2(-xAng, -zAng)+PI);
return y;
}
